@model List<Stock>
@{
    ViewBag.Title = "Home";
}

<div class="row" id="main-content">
    <div class="col-lg-8 col-lg-offset-2">
        <div id="main" class="col-md-12">
            <h1>Welcome to Home Page!</h1>
        </div>
        <div id="description" class="col-md-10 spacingTop">
            Home page demonstrates the changes of the stock price over time in the form of a Chart and a Table. Use your mouse over
            the Chart to zoom in. Use the switch to navigate between Chart and Table views.
        </div>

        <div class="col-md-12 spacingTop">Please select the dates using the selector(click the icon), or by typing in form MM/DD/YYYY</div>

        <div class='col-md-5 spacingTop'>
            <div class="form-group">
                <div class='input-group date' id='datetimepicker6'>
                    <input type='text' class="form-control" id="fromDate" placeholder="FROM" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>

        <div class='col-md-5 spacingTop'>
            <div class="form-group">
                <div class='input-group date' id='datetimepicker7'>
                    <input type='text' class="form-control" id="toDate" placeholder="TO" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>

        <div class="col-md-2 spacingTop">
            <button class="btn btn-primary" id="btnCheckStock">
                Check <i class="fa fa-angle-right"> </i>
            </button>
        </div>

        <div class="col-md-12 spacingTop">
            <span id="labelSwitch">Switch to <span class='text-info'>TABLE</span> view: </span>
            <input type="checkbox" id="graphSwitch" name="graphSwitch" checked>
        </div>

        <div id="chartContainer" class="col-md-10 spacingTop">
            <div id="stockChart" style="height: 300px; width: 100%;"></div>
        </div>

        <div id="tableContainer" class="col-md-12 spacingTop" style="display: none;">
            <div id="stockTable"></div>
        </div>

    </div>@*Container grid 2-8-2*@
</div>
<script type="text/javascript">

    var App = (function () {
        function App() {
            var model = '@Html.Raw(Json.Serialize(Model))';
            var data = jQuery.parseJSON(model);
            this.originalDates = getDates(data);
            this.originalNumbers = getNumbers(data);
            this.dates = this.originalDates;
            this.numbers = this.originalNumbers;
        }

        function getDates(data) {

            var dates = []
            for (var i = 0; i < data.length; i++) {
                dates[i] = new Date(data[i].StockDate);
            }
            return dates;
        }
        function getNumbers(data) {
            var numbers = []
            for (var i = 0; i < data.length; i++)
                numbers[i] = data[i].StockValue;
            return numbers;
        }

        App.prototype.restrictDates = function (from, to) {
            var fromDate = this.parseDate(from);
            var toDate = this.parseDate(to).setHours(12, 0, 0, 0);
            var newNumbers = [];
            var newDates = []
            var j = 0;
            var i;
            for (i = 0; i < this.originalDates.length; i++) {

                if (fromDate > this.originalDates[i])
                    continue;

                if (toDate < this.originalDates[i])
                    break;

                newNumbers[j] = this.originalNumbers[i];
                newDates[j] = this.originalDates[i];
                j++;
            }

            this.dates = newDates;
            this.numbers = newNumbers;

        };
        // input mm/dd/yyyy
        App.prototype.parseDate = function (input) {
            var parts = input.split(' ')[0].split('/');
            // new Date(year, month [, day [, hours[, minutes[, seconds[, ms]]]]])
            //   yyyy,mm,dd
            return new Date(parts[2], parts[0] - 1, parts[1]);
        }
        return App;
    }());
</script>
